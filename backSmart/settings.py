"""
Django settings for backSmart project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv

# agregar librerias para conectarme a postgres
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / '.env')
# Define el directorio donde se guardarán los archivos subidos
MEDIA_URL = '/C:/Users/danie/OneDrive/Escritorio/ProyectoSmartMed/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'ProyectoSmartMed', 'FuentesSmartMed')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-v*#5blx8(@qzcww9i7bmg!9f0n)^==!8kt-1$@ub2g=!^e%9fd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'host.docker.internal',
    'localhost',
    '127.0.0.1',
    '*'
]

CORS_ALLOWED_ORIGINS = [
    "http://3.135.197.152:3000",  # Ajusta según el puerto de tu frontend
    "*",
]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',#Habilitar cors para multipuertos con react
    'django_filters',#Filtros dinámicos para las consultas
    'apiSmart',#Inicialización de la aplicación
    'coreapi',#Paquete para la API
    'channels',#Paquete para el webSocket
    'rest_framework_simplejwt',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'DELETE',
    'OPTIONS',
    'PATCH'
]

CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'backSmart.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backSmart.wsgi.application'
ASGI_APPLICATION = 'backSmart.asgi.application' #modificar archivo asgi.py para la consifuración del websocket

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

#Por default nos estamos conectando al servidor de postgres
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'airflow',
        'USER': 'postgres',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
        'OPTIONS': {
            'options': '-c search_path=django_api,smart_med'
        }
    },
    'mysql_db': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ygp1',
        'USER': 'root',
        'PASSWORD': 'Medileser2019@',
        'HOST': '54.144.198.184',
        'PORT': '3306',
    },
    'mysql_db_ygp2': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ygp2',
        'USER': 'root',
        'PASSWORD': 'Medileser2019@',
        'HOST': '54.144.198.184',
        'PORT': '3306',
    }
}

SIMPLE_JWT = {
    'JWT_COOKIE_SECURE': False,  # Deshabilitar el atributo 'Secure' en la cookie
    'JWT_COOKIE_SAMESITE': 'None',  # Permitir cookies en solicitudes de origen cruzado
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

CORS_ALLOWED_ORIGINS = [
    'http://192.168.20.126:5173', #Habilitar puerto de react remoto
    'http://localhost:5173', #Habilitar puerto reac tlocal
    'http://localhost:5174', #Habilitar puerto reac tlocal
    'http://172.22.0.7:8080',
    'http://localhost:8080',
    'http://172.17.0.3',
    'http://localhost',
    'http://host.docker.internal:8000',
    'http://localhost:5174',
    'http://3.135.197.152:3000',  # Ajusta según el puerto de tu frontend
    'http://localhost:3000',  # Ajusta según el puerto de tu frontend
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,  # Tamaño de página por defecto
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'apiSmart.authentication.CookieJWTAuthentication', #Autenticación por token
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),

}

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer', #Canal default para la conexion del websocket
    },
}

SESSION_COOKIE_SECURE = False  # Asegura que las cookies se envíen solo a través de HTTPS
CSRF_COOKIE_SECURE = False  # Asegura que las cookies CSRF se envíen solo a través de HTTPS
SESSION_COOKIE_SAMESITE = 'None'  # Permite el envío de cookies en solicitudes de origen cruzado (solo para HTTPS)
CSRF_COOKIE_SAMESITE = 'None'  # Permite el envío de cookies CSRF en solicitudes de origen cruzado

